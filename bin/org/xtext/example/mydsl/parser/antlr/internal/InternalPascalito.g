/*
 * generated by Xtext 2.10.0
 */
grammar InternalPascalito;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.PascalitoGrammarAccess;

}

@parser::members {

 	private PascalitoGrammarAccess grammarAccess;

    public InternalPascalitoParser(TokenStream input, PascalitoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programa";
   	}

   	@Override
   	protected PascalitoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePrograma
entryRulePrograma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramaRule()); }
	iv_rulePrograma=rulePrograma
	{ $current=$iv_rulePrograma.current; }
	EOF;

// Rule Programa
rulePrograma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='programa'
		{
			newLeafNode(otherlv_0, grammarAccess.getProgramaAccess().getProgramaKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getIdentEStringParserRuleCall_1_0());
				}
				lv_Ident_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					set(
						$current,
						"Ident",
						lv_Ident_1_0,
						"org.xtext.example.mydsl.Pascalito.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProgramaAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getBlocoBlocoParserRuleCall_3_0());
				}
				lv_bloco_3_0=ruleBloco
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					set(
						$current,
						"bloco",
						lv_bloco_3_0,
						"org.xtext.example.mydsl.Pascalito.Bloco");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getProgramaAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComando
entryRuleComando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComandoRule()); }
	iv_ruleComando=ruleComando
	{ $current=$iv_ruleComando.current; }
	EOF;

// Rule Comando
ruleComando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComandoAccess().getCallProcedimentoParserRuleCall_0());
		}
		this_CallProcedimento_0=ruleCallProcedimento
		{
			$current = $this_CallProcedimento_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getAtribuicaoParserRuleCall_1());
		}
		this_Atribuicao_1=ruleAtribuicao
		{
			$current = $this_Atribuicao_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getDesvioParserRuleCall_2());
		}
		this_Desvio_2=ruleDesvio
		{
			$current = $this_Desvio_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComandoAccess().getLoopParserRuleCall_3());
		}
		this_Loop_3=ruleLoop
		{
			$current = $this_Loop_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpressao
entryRuleExpressao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressaoRule()); }
	iv_ruleExpressao=ruleExpressao
	{ $current=$iv_ruleExpressao.current; }
	EOF;

// Rule Expressao
ruleExpressao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressaoAccess().getExpNegParserRuleCall_0());
		}
		this_ExpNeg_0=ruleExpNeg
		{
			$current = $this_ExpNeg_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressaoAccess().getComutativaParserRuleCall_1());
		}
		this_Comutativa_1=ruleComutativa
		{
			$current = $this_Comutativa_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBloco
entryRuleBloco returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlocoRule()); }
	iv_ruleBloco=ruleBloco
	{ $current=$iv_ruleBloco.current; }
	EOF;

// Rule Bloco
ruleBloco returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlocoAccess().getBlocoAction_0(),
					$current);
			}
		)
		(
			otherlv_1='var'
			{
				newLeafNode(otherlv_1, grammarAccess.getBlocoAccess().getVarKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBlocoAccess().getDefvariavelVariavelParserRuleCall_1_1_0());
					}
					lv_defvariavel_2_0=ruleVariavel
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlocoRule());
						}
						add(
							$current,
							"defvariavel",
							lv_defvariavel_2_0,
							"org.xtext.example.mydsl.Pascalito.Variavel");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getBlocoAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBlocoAccess().getDefvariavelVariavelParserRuleCall_1_2_1_0());
						}
						lv_defvariavel_4_0=ruleVariavel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBlocoRule());
							}
							add(
								$current,
								"defvariavel",
								lv_defvariavel_4_0,
								"org.xtext.example.mydsl.Pascalito.Variavel");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=';'
			{
				newLeafNode(otherlv_5, grammarAccess.getBlocoAccess().getSemicolonKeyword_1_3());
			}
		)*
		(
			otherlv_6='procedimento'
			{
				newLeafNode(otherlv_6, grammarAccess.getBlocoAccess().getProcedimentoKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBlocoAccess().getDefprocedimentoProcedimentoParserRuleCall_2_1_0());
					}
					lv_defprocedimento_7_0=ruleProcedimento
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlocoRule());
						}
						add(
							$current,
							"defprocedimento",
							lv_defprocedimento_7_0,
							"org.xtext.example.mydsl.Pascalito.Procedimento");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='inicio'
		{
			newLeafNode(otherlv_8, grammarAccess.getBlocoAccess().getInicioKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlocoAccess().getExecutaComandoParserRuleCall_4_0());
				}
				lv_executa_9_0=ruleComando
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlocoRule());
					}
					add(
						$current,
						"executa",
						lv_executa_9_0,
						"org.xtext.example.mydsl.Pascalito.Comando");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='fim'
		{
			newLeafNode(otherlv_10, grammarAccess.getBlocoAccess().getFimKeyword_5());
		}
	)
;

// Entry rule entryRuleVariavel
entryRuleVariavel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariavelRule()); }
	iv_ruleVariavel=ruleVariavel
	{ $current=$iv_ruleVariavel.current; }
	EOF;

// Rule Variavel
ruleVariavel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariavelAccess().getVariavelAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariavelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariavelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleProcedimento
entryRuleProcedimento returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcedimentoRule()); }
	iv_ruleProcedimento=ruleProcedimento
	{ $current=$iv_ruleProcedimento.current; }
	EOF;

// Rule Procedimento
ruleProcedimento returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_0=RULE_ID
					{
						newLeafNode(lv_name_0_0, grammarAccess.getProcedimentoAccess().getNameIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProcedimentoRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getProcedimentoAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProcedimentoAccess().getParametroVariavelParserRuleCall_0_2_0_0());
						}
						lv_parametro_2_0=ruleVariavel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProcedimentoRule());
							}
							add(
								$current,
								"parametro",
								lv_parametro_2_0,
								"org.xtext.example.mydsl.Pascalito.Variavel");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getProcedimentoAccess().getCommaKeyword_0_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getProcedimentoAccess().getParametroVariavelParserRuleCall_0_2_1_1_0());
							}
							lv_parametro_4_0=ruleVariavel
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getProcedimentoRule());
								}
								add(
									$current,
									"parametro",
									lv_parametro_4_0,
									"org.xtext.example.mydsl.Pascalito.Variavel");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getProcedimentoAccess().getRightParenthesisKeyword_0_3());
			}
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getProcedimentoAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcedimentoAccess().getBlocoBlocoParserRuleCall_2_0());
				}
				lv_bloco_7_0=ruleBloco
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcedimentoRule());
					}
					set(
						$current,
						"bloco",
						lv_bloco_7_0,
						"org.xtext.example.mydsl.Pascalito.Bloco");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getProcedimentoAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCallProcedimento
entryRuleCallProcedimento returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallProcedimentoRule()); }
	iv_ruleCallProcedimento=ruleCallProcedimento
	{ $current=$iv_ruleCallProcedimento.current; }
	EOF;

// Rule CallProcedimento
ruleCallProcedimento returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcedimentoRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCallProcedimentoAccess().getDefinidoProcedimentoCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCallProcedimentoAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCallProcedimentoAccess().getParametroExpressaoParserRuleCall_1_1_0_0());
						}
						lv_parametro_2_0=ruleExpressao
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCallProcedimentoRule());
							}
							add(
								$current,
								"parametro",
								lv_parametro_2_0,
								"org.xtext.example.mydsl.Pascalito.Expressao");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getCallProcedimentoAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCallProcedimentoAccess().getParametroExpressaoParserRuleCall_1_1_1_1_0());
							}
							lv_parametro_4_0=ruleExpressao
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallProcedimentoRule());
								}
								add(
									$current,
									"parametro",
									lv_parametro_4_0,
									"org.xtext.example.mydsl.Pascalito.Expressao");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getCallProcedimentoAccess().getRightParenthesisKeyword_1_2());
			}
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getCallProcedimentoAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleAtribuicao
entryRuleAtribuicao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtribuicaoRule()); }
	iv_ruleAtribuicao=ruleAtribuicao
	{ $current=$iv_ruleAtribuicao.current; }
	EOF;

// Rule Atribuicao
ruleAtribuicao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtribuicaoRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAtribuicaoAccess().getAtribuiVariavelCrossReference_0_0());
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getAtribuicaoAccess().getOP_ASSIGNMENTParserRuleCall_1());
		}
		ruleOP_ASSIGNMENT
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAtribuicaoAccess().getAtribuiResultadoExpressaoParserRuleCall_2_0());
				}
				lv_atribuiResultado_2_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtribuicaoRule());
					}
					set(
						$current,
						"atribuiResultado",
						lv_atribuiResultado_2_0,
						"org.xtext.example.mydsl.Pascalito.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getAtribuicaoAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleDesvio
entryRuleDesvio returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesvioRule()); }
	iv_ruleDesvio=ruleDesvio
	{ $current=$iv_ruleDesvio.current; }
	EOF;

// Rule Desvio
ruleDesvio returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getDesvioAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDesvioAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDesvioAccess().getSeExpressaoParserRuleCall_2_0());
				}
				lv_se_2_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesvioRule());
					}
					set(
						$current,
						"se",
						lv_se_2_0,
						"org.xtext.example.mydsl.Pascalito.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getDesvioAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDesvioAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDesvioAccess().getFacaComandoParserRuleCall_5_0());
				}
				lv_faca_5_0=ruleComando
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesvioRule());
					}
					add(
						$current,
						"faca",
						lv_faca_5_0,
						"org.xtext.example.mydsl.Pascalito.Comando");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDesvioAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_7='else'
			{
				newLeafNode(otherlv_7, grammarAccess.getDesvioAccess().getElseKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getDesvioAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDesvioAccess().getSeNaoComandoParserRuleCall_7_2_0());
					}
					lv_seNao_9_0=ruleComando
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDesvioRule());
						}
						add(
							$current,
							"seNao",
							lv_seNao_9_0,
							"org.xtext.example.mydsl.Pascalito.Comando");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDesvioAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Loop'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoopAccess().getLoopKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLoopAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getSeExpressaoParserRuleCall_2_0());
				}
				lv_se_2_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"se",
						lv_se_2_0,
						"org.xtext.example.mydsl.Pascalito.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getLoopAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getLoopAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getFacaComandoParserRuleCall_5_0());
				}
				lv_faca_5_0=ruleComando
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					add(
						$current,
						"faca",
						lv_faca_5_0,
						"org.xtext.example.mydsl.Pascalito.Comando");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getLoopAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCallProc
entryRuleCallProc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallProcRule()); }
	iv_ruleCallProc=ruleCallProc
	{ $current=$iv_ruleCallProc.current; }
	EOF;

// Rule CallProc
ruleCallProc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCallProcRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCallProcAccess().getRepresentaProcProcedimentoCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCallProcAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCallProcAccess().getParametroExpressaoParserRuleCall_1_1_0_0());
						}
						lv_parametro_2_0=ruleExpressao
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCallProcRule());
							}
							add(
								$current,
								"parametro",
								lv_parametro_2_0,
								"org.xtext.example.mydsl.Pascalito.Expressao");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getCallProcAccess().getCommaKeyword_1_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getCallProcAccess().getParametroExpressaoParserRuleCall_1_1_1_1_0());
							}
							lv_parametro_4_0=ruleExpressao
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getCallProcRule());
								}
								add(
									$current,
									"parametro",
									lv_parametro_4_0,
									"org.xtext.example.mydsl.Pascalito.Expressao");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getCallProcAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleCallVariavel
entryRuleCallVariavel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallVariavelRule()); }
	iv_ruleCallVariavel=ruleCallVariavel
	{ $current=$iv_ruleCallVariavel.current; }
	EOF;

// Rule CallVariavel
ruleCallVariavel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCallVariavelRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getCallVariavelAccess().getRepresentaVariavelCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleComutativa
entryRuleComutativa returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComutativaRule()); }
	iv_ruleComutativa=ruleComutativa
	{ $current=$iv_ruleComutativa.current; }
	EOF;

// Rule Comutativa
ruleComutativa returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComutativaAccess().getN_ComutativaParserRuleCall_0());
		}
		this_N_Comutativa_0=ruleN_Comutativa
		{
			$current = $this_N_Comutativa_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getComutativaAccess().getComutativaLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getComutativaAccess().getOP_ARIT_PRIO_0ParserRuleCall_1_1());
			}
			ruleOP_ARIT_PRIO_0
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComutativaAccess().getRightN_ComutativaParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleN_Comutativa
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComutativaRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Pascalito.N_Comutativa");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleN_Comutativa
entryRuleN_Comutativa returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getN_ComutativaRule()); }
	iv_ruleN_Comutativa=ruleN_Comutativa
	{ $current=$iv_ruleN_Comutativa.current; }
	EOF;

// Rule N_Comutativa
ruleN_Comutativa returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getN_ComutativaAccess().getExpBinLogicaParserRuleCall_0());
		}
		this_ExpBinLogica_0=ruleExpBinLogica
		{
			$current = $this_ExpBinLogica_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getN_ComutativaAccess().getN_ComutativaLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getN_ComutativaAccess().getOP_ARIT_PRIO_1ParserRuleCall_1_1());
			}
			ruleOP_ARIT_PRIO_1
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getN_ComutativaAccess().getRightExpBinLogicaParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpBinLogica
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getN_ComutativaRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Pascalito.ExpBinLogica");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpBinLogica
entryRuleExpBinLogica returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpBinLogicaRule()); }
	iv_ruleExpBinLogica=ruleExpBinLogica
	{ $current=$iv_ruleExpBinLogica.current; }
	EOF;

// Rule ExpBinLogica
ruleExpBinLogica returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpBinLogicaAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpBinLogicaAccess().getExpBinLogicaLeftAction_1_0(),
						$current);
				}
			)
			{
				newCompositeNode(grammarAccess.getExpBinLogicaAccess().getOP_COMPARISONParserRuleCall_1_1());
			}
			ruleOP_COMPARISON
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpBinLogicaAccess().getRightPrimaryParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpBinLogicaRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.Pascalito.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getNumberLiteralParserRuleCall_0());
		}
		this_NumberLiteral_0=ruleNumberLiteral
		{
			$current = $this_NumberLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getCallProcParserRuleCall_1());
		}
		this_CallProc_1=ruleCallProc
		{
			$current = $this_CallProc_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getCallVariavelParserRuleCall_2());
		}
		this_CallVariavel_2=ruleCallVariavel
		{
			$current = $this_CallVariavel_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getComutativaParserRuleCall_3_1());
			}
			this_Comutativa_4=ruleComutativa
			{
				$current = $this_Comutativa_4.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	iv_ruleNumberLiteral=ruleNumberLiteral
	{ $current=$iv_ruleNumberLiteral.current; }
	EOF;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0(),
					$current);
			}
		)
		{
			newCompositeNode(grammarAccess.getNumberLiteralAccess().getEBigDecimalParserRuleCall_1());
		}
		ruleEBigDecimal
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEBigDecimal
entryRuleEBigDecimal returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBigDecimalRule()); }
	iv_ruleEBigDecimal=ruleEBigDecimal
	{ $current=$iv_ruleEBigDecimal.current.getText(); }
	EOF;

// Rule EBigDecimal
ruleEBigDecimal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getEBigDecimalAccess().getINTTerminalRuleCall_0());
		}
		    |
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEBigDecimalAccess().getINTTerminalRuleCall_1_0());
			}
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEBigDecimalAccess().getFullStopKeyword_1_1());
			}
			this_INT_3=RULE_INT
			{
				$current.merge(this_INT_3);
			}
			{
				newLeafNode(this_INT_3, grammarAccess.getEBigDecimalAccess().getINTTerminalRuleCall_1_2());
			}
		)
	)
;

// Entry rule entryRuleExpNeg
entryRuleExpNeg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpNegRule()); }
	iv_ruleExpNeg=ruleExpNeg
	{ $current=$iv_ruleExpNeg.current; }
	EOF;

// Rule ExpNeg
ruleExpNeg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpNegAccess().getOP_NEGATEParserRuleCall_0());
		}
		ruleOP_NEGATE
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExpNegAccess().getNegaExpressaoParserRuleCall_1_0());
				}
				lv_nega_1_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpNegRule());
					}
					set(
						$current,
						"nega",
						lv_nega_1_0,
						"org.xtext.example.mydsl.Pascalito.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOP_COMPARISON
entryRuleOP_COMPARISON returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOP_COMPARISONRule()); }
	iv_ruleOP_COMPARISON=ruleOP_COMPARISON
	{ $current=$iv_ruleOP_COMPARISON.current.getText(); }
	EOF;

// Rule OP_COMPARISON
ruleOP_COMPARISON returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getLessThanSignKeyword_0());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getGreaterThanSignKeyword_1());
		}
		    |
		kw='=<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getEqualsSignLessThanSignKeyword_2());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getGreaterThanSignEqualsSignKeyword_3());
		}
		    |
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getEqualsSignEqualsSignKeyword_4());
		}
		    |
		kw='AND'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getANDKeyword_5());
		}
		    |
		kw='OR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getORKeyword_6());
		}
		    |
		kw='XOR'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_COMPARISONAccess().getXORKeyword_7());
		}
	)
;

// Entry rule entryRuleOP_ARIT_PRIO_0
entryRuleOP_ARIT_PRIO_0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOP_ARIT_PRIO_0Rule()); }
	iv_ruleOP_ARIT_PRIO_0=ruleOP_ARIT_PRIO_0
	{ $current=$iv_ruleOP_ARIT_PRIO_0.current.getText(); }
	EOF;

// Rule OP_ARIT_PRIO_0
ruleOP_ARIT_PRIO_0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_ARIT_PRIO_0Access().getHyphenMinusKeyword_0());
		}
		    |
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_ARIT_PRIO_0Access().getPlusSignKeyword_1());
		}
	)
;

// Entry rule entryRuleOP_ARIT_PRIO_1
entryRuleOP_ARIT_PRIO_1 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOP_ARIT_PRIO_1Rule()); }
	iv_ruleOP_ARIT_PRIO_1=ruleOP_ARIT_PRIO_1
	{ $current=$iv_ruleOP_ARIT_PRIO_1.current.getText(); }
	EOF;

// Rule OP_ARIT_PRIO_1
ruleOP_ARIT_PRIO_1 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_ARIT_PRIO_1Access().getAsteriskKeyword_0());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOP_ARIT_PRIO_1Access().getSolidusKeyword_1());
		}
	)
;

// Entry rule entryRuleOP_ASSIGNMENT
entryRuleOP_ASSIGNMENT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOP_ASSIGNMENTRule()); }
	iv_ruleOP_ASSIGNMENT=ruleOP_ASSIGNMENT
	{ $current=$iv_ruleOP_ASSIGNMENT.current.getText(); }
	EOF;

// Rule OP_ASSIGNMENT
ruleOP_ASSIGNMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='->'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOP_ASSIGNMENTAccess().getHyphenMinusGreaterThanSignKeyword());
	}
;

// Entry rule entryRuleOP_NEGATE
entryRuleOP_NEGATE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOP_NEGATERule()); }
	iv_ruleOP_NEGATE=ruleOP_NEGATE
	{ $current=$iv_ruleOP_NEGATE.current.getText(); }
	EOF;

// Rule OP_NEGATE
ruleOP_NEGATE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='-'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getOP_NEGATEAccess().getHyphenMinusKeyword());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
